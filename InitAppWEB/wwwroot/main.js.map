{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/core-module/core-module.module.ts","webpack:///./src/app/core-module/footer/footer.component.html","webpack:///./src/app/core-module/footer/footer.component.ts","webpack:///./src/app/core-module/navbar/navbar.component.html","webpack:///./src/app/core-module/navbar/navbar.component.ts","webpack:///./src/app/guards/auth-can-load.guard.ts","webpack:///./src/app/identity/identity-routing.module.ts","webpack:///./src/app/identity/identity.module.ts","webpack:///./src/app/identity/login/login.component.html","webpack:///./src/app/identity/login/login.component.ts","webpack:///./src/app/identity/register/register.component.html","webpack:///./src/app/identity/register/register.component.ts","webpack:///./src/app/samples/samples-list/samples-list.component.html","webpack:///./src/app/samples/samples-list/samples-list.component.ts","webpack:///./src/app/samples/samples-routing.module.ts","webpack:///./src/app/samples/samples.component.html","webpack:///./src/app/samples/samples.component.ts","webpack:///./src/app/samples/samples.module.ts","webpack:///./src/app/samples/samples.service.ts","webpack:///./src/app/shared-module/page-not-found/page-not-found.component.html","webpack:///./src/app/shared-module/page-not-found/page-not-found.component.ts","webpack:///./src/app/shared-module/services/layout.service.ts","webpack:///./src/app/shared-module/shared-module.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./samples/samples.module.ngfactory\": [\n\t\t\"./src/app/samples/samples.module.ngfactory.js\",\n\t\t\"samples-samples-module-ngfactory\"\n\t],\n\t\"./user/user.module.ngfactory\": [\n\t\t\"./src/app/user/user.module.ngfactory.js\",\n\t\t\"user-user-module-ngfactory\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './identity/login/login.component';\nimport { RegisterComponent } from './identity/register/register.component';\nimport { Route, RouterModule } from '@angular/router';\nimport { PageNotFoundComponent } from './shared-module/page-not-found/page-not-found.component';\nimport { AuthCanLoadGuard } from './guards/auth-can-load.guard';\n\nconst appRoutes: Route[] = [\n  {path : '', pathMatch: 'full', redirectTo: '/login'},\n  {path: 'login' , component: LoginComponent},\n  {path: 'register' , component: RegisterComponent},\n  {path: 'user', canLoad: [AuthCanLoadGuard], loadChildren: './user/user.module#UserModule'},\n  {path: 'samples' , canLoad: [AuthCanLoadGuard], loadChildren: './samples/samples.module#SamplesModule'},\n  {path: '**' , component: PageNotFoundComponent}\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule {\n}\n","<app-navbar *ngIf=\"isNavBarVisible\"></app-navbar>\n  <div class=\"container\">\n    <div class=\"row mt-3\">\n        <app-samples-list *ngIf=\"isNavBarVisible\" class=\"col-lg-6\"></app-samples-list>\n\n        <div class=\"col-lg-6\" [ngClass]=\"{'col-lg-12' : !isNavBarVisible}\"><router-outlet></router-outlet></div>\n    </div>\n  </div>\n  <app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { LayoutService } from './shared-module/services/layout.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements OnInit {\n  constructor(private layoutService: LayoutService) {}\n  title = 'app';\n  isNavBarVisible = false;\n\n  ngOnInit() {\n    this.layoutService.navBarSource$.subscribe((isVisible) => {\n      this.isNavBarVisible = isVisible;\n    });\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthService } from './auth/auth.service';\nimport { IdentityModule } from './identity/identity.module';\nimport { IdentityRoutingModule } from './identity/identity-routing.module';\nimport { AuthCanLoadGuard } from './guards/auth-can-load.guard';\nimport { SamplesModule } from './samples/samples.module';\nimport { CoreModule } from './core-module/core-module.module';\nimport { SharedModule } from './shared-module/shared-module.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    CoreModule,\n    AppRoutingModule,\n    IdentityModule,\n    IdentityRoutingModule,\n    SamplesModule,\n    SharedModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n    AuthService,\n    AuthCanLoadGuard\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LayoutService } from '../shared-module/services/layout.service';\nimport { Http, Headers } from '@angular/http';\nimport {  FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private layoutService: LayoutService,\n    private http: Http,\n    private router: Router\n    ) {}\n\n  loggedInUserName$: Observable<string>;\n  loggedInUserId: string;\n  private isUserLoggedIn = false;\n  loginFailureStatus: string;\n  registerFailureStatus: string;\n\nlogin(form: FormGroup) {\n\n  const credentials = JSON.stringify(form.value);\n  return this.http.post('http://localhost:5006/api/authenticate', credentials, {\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).subscribe(response => {\n    const token = (<any>response).json().token;\n    localStorage.setItem('authToken', token);\n    this.loggedInUserName$ = (<any>response).json().username;\n    this.loggedInUserId = (<any>response).json().id;\n    localStorage.setItem('authUser', (<any>response).json().id);\n    this.isUserLoggedIn = true;\n    this.onLoginSubmitSuccess();\n  }, err => {\n    this.onLoginSubmitFailure();\n    this.loginFailureStatus = err.status;\n  });\n}\n\nregister(form: FormGroup) {\n  const registerData = JSON.stringify(form.value);\n  return this.http.post('http://localhost:5006/api/register', registerData, {\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    })\n  }).subscribe(response => {\n    this.onRegisterSubmitSuccess();\n  }, err => {\n    this.onRegisterSubmitFailure();\n    this.registerFailureStatus = err;\n  });\n}\n\n\n\n\ntakeLoggedInUserName(): Observable<string> {\n  if (this.loggedInUserName$ != null) {\n  return this.loggedInUserName$;\n  }\n}\n\nonLoginSubmitSuccess() {\n  this.router.navigate(['/user']).then(() => this.layoutService.showNavBar());\n}\n\nonLoginSubmitFailure() {\n  console.log('Login is incorrect!');\n}\n\nonRegisterSubmitSuccess() {\n  this.router.navigate(['/login']);\n}\n\nonRegisterSubmitFailure() {\n  console.log('Register Failure!');\n}\n\nlogOut() {\n  this.isUserLoggedIn = false;\n  localStorage.removeItem('authToken');\n  this.layoutService.hideNavBar();\n  this.router.navigate(['/login']);\n}\n\nisLoggedIn() {\n  return this.isUserLoggedIn;\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    FooterComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    NavbarComponent,\n    FooterComponent\n  ]\n})\nexport class CoreModule { }\n","<footer class=\"footer py-3 pt-5 bg-light align-bottom\">\n  <p class=\"m-0 text-center\">Copyright &copy; Wojtek Głuch 2018</p>\n</footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.less']\n})\nexport class FooterComponent {\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n  <a class=\"navbar-brand\">\n    <i class=\"material-icons\">view_carousel</i>\n     InitApp\n    </a>\n\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  \n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\"></ul>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\">Logged in as:  <strong>{{loggedInUserName$}}</strong></a>\n        </li>\n        <li class=\"nav-item cursor-pointer\">\n          <a class=\"nav-link\" (click) = \"userDashboard()\"><i class=\"material-icons\">settings</i></a>\n        </li>\n        <li class=\"nav-item cursor-pointer\">\n          <a class=\"nav-link\" (click) = \"logOut()\"><i class=\"material-icons\">power_settings_new</i></a>\n        </li>\n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.less']\n})\nexport class NavbarComponent implements OnInit {\n  constructor(private authService: AuthService, private router: Router) {\n   }\n   loggedInUserName$: Observable<string>;\n   ngOnInit() {\n     this.loggedInUserName$ = this.authService.takeLoggedInUserName();\n   }\n\n  logOut() {\n    this.authService.logOut();\n    this.router.navigate(['/login']);\n  }\n\n  userDashboard() {\n    this.router.navigate(['/user']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Route, Router, CanLoad } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\n\n@Injectable()\nexport class AuthCanLoadGuard implements CanLoad {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n\n    this.router.navigate(['/login']);\n       return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { RouterModule, Route } from '@angular/router';\n\nconst identityRoutes: Route[] = [\n  {\n    path: 'login',\n    component: <any>LoginComponent,\n  },\n  {\n    path: 'register',\n    component: <any>RegisterComponent\n  }\n];\n\n@NgModule({\n  imports: [\n      RouterModule.forChild(identityRoutes)\n  ],\n  exports: [\n      RouterModule\n  ]\n})\nexport class IdentityRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { IdentityComponent } from './identity.component';\nimport { RegisterComponent } from './register/register.component';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IdentityRoutingModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  exports: [RegisterComponent, LoginComponent],\n  declarations: [LoginComponent, RegisterComponent, IdentityComponent]\n})\nexport class IdentityModule { }\n","<div class=\"col-lg-6 m-auto\">\n  <h3 class=\"text-center\">Login or Register</h3>\n  <hr>\n  <div class=\"wrapper bg-light\">\n    <form class=\"form-signin\" [formGroup]=\"loginForm\"> \n      <div class=\"form-group text-center\">    \n        <label>Username</label>\n        <input name=\"username\" type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\">\n        <small *ngIf=\"!loginForm.get('username').valid && loginForm.get('username').dirty\" class=\"form-text text-danger\">Username is required!</small>\n      </div>\n      <div class=\"form-group text-center\">\n        <label>Password</label>\n        <input name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">   \n        <small *ngIf=\"!loginForm.get('password').valid && loginForm.get('password').dirty\" class=\"form-text text-danger\">Password is required!</small>\n      </div>\n      <button (click) = \"onSubmit(loginForm)\" class=\"btn btn-success\" type=\"submit\">Login</button>   \n      <button (click) = \"register()\" class=\"btn btn-info float-right\" type=\"submit\">Register</button> \n      <small *ngIf=\"errorLabel\" class=\"form-text text-danger text-center\">Invalid Username or Password!</small>\n    </form>\n  </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../auth/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.less']\n})\nexport class LoginComponent implements OnInit {\nloginForm: FormGroup;\nerrorLabel;\n\n  constructor(private authService: AuthService, private formBuilder: FormBuilder, private router: Router) { }\n  ngOnInit() {\n    this.loginForm = this.buildLoginForm();\n  }\n\nbuildLoginForm() {\n  return this.formBuilder.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required]\n  });\n}\n\nonSubmit(form: FormGroup) {\n  if (form != null) {\n    this.authService.login(form);\n  }\n  if (this.authService.loginFailureStatus === '401') {\n    this.errorLabel = true;\n  } else {\n    this.errorLabel = false;\n  }\n}\n\nregister() {\n  this.router.navigate(['/register']);\n}\n}\n\n","<div class=\"col-lg-6 m-auto\">\n  <h3 class=\"text-center\">Register new user</h3>\n  <hr>\n  <div class=\"wrapper bg-light\">\n    <form class=\"form-signin\" [formGroup]=\"registerForm\"> \n      <div class=\"form-group text-center\">    \n        <label>Username</label>\n        <input name=\"username\" type=\"text\" id=\"username\" class=\"form-control\" formControlName=\"username\">\n        <small *ngIf=\"!registerForm.get('username').valid && registerForm.get('username').dirty\" class=\"form-text text-danger\">Username is required!</small>\n      </div>\n      <div class=\"form-group text-center\">\n        <label>Password</label>\n        <input name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" formControlName=\"password\">   \n        <small *ngIf=\"!registerForm.get('password').valid && registerForm.get('password').dirty\" class=\"form-text text-danger\">Password is required!</small>\n      </div>\n      <button (click) = \"back()\" class=\"btn btn-info\"><i class=\"material-icons\">keyboard_backspace</i> Back</button>   \n      <button (click) = \"onSubmit(registerForm)\" class=\"btn btn-success float-right\" type=\"submit\">Register</button> \n      <small class=\"form-text text-danger text-center\">{{errorInfo}}</small>\n    </form>\n  </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { AuthService } from '../../auth/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.less']\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  errorInfo;\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.registerForm = this.buildRegisterForm();\n  }\n\n  buildRegisterForm() {\n    return this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  onSubmit(form: FormGroup) {\n    if (form != null) {\n      this.authService.register(form);\n    }\n    if (this.authService.registerFailureStatus != null) {\n      this.errorInfo = this.authService.registerFailureStatus;\n    }\n  }\n  back() {\n    this.router.navigate(['/login']);\n  }\n}\n","<h3>Samples</h3>\n<ng-container *ngIf=\"(Samples$ | async) as samples\">\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Description</th>\n              <th>Text</th>\n              <th>Category</th>\n            </tr>\n          </thead>\n          <tbody *ngFor=\"let sample of samples\">\n            <tr>\n              <td>{{sample?.name}}</td>\n              <td>{{sample?.description}}</td>\n              <td>{{sample?.text}}</td>\n              <td>{{sample?.category}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </ng-container>\n        <hr>\n        <small>\n        Last Update at: \n        </small>\n        <hr>\n\n     ","import { Component, OnInit } from '@angular/core';\nimport { SamplesService } from '../samples.service';\nimport { Observable } from 'rxjs';\nimport { Sample } from '../models/sample';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-samples-list',\n  templateUrl: './samples-list.component.html',\n  styleUrls: ['./samples-list.component.less']\n})\nexport class SamplesListComponent implements OnInit {\n\n  Samples$: Observable<Sample[]>;\n\n  constructor(private samplesService: SamplesService) {\n    this.Samples$ = this.samplesService.getSamples(localStorage.getItem('authUser'));\n  }\n\n  ngOnInit() {\n\n    this.Samples$.subscribe(x => console.log('Observer got a next value: ' + x),\n    err => console.log('Observer got a next value: ' + err));\n  }\n\n}\n","import { RouterModule, Route } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SamplesComponent } from './samples.component';\nimport { SamplesListComponent } from './samples-list/samples-list.component';\n\nconst samplesRoutes: Route[] = [\n    {\n        path: '' ,\n        component: <any>SamplesComponent,\n        children: [\n            {\n            path: '',\n            component: <any>SamplesListComponent\n            }\n        ]\n    }\n  ];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(samplesRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class SamplesRoutingModule {\n\n}","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-samples',\n  templateUrl: './samples.component.html',\n  styleUrls: ['./samples.component.less']\n})\nexport class SamplesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SamplesComponent } from './samples.component';\nimport { SamplesListComponent } from './samples-list/samples-list.component';\nimport { SamplesRoutingModule } from './samples-routing.module';\nimport { SamplesService } from './samples.service';\nimport { HttpModule } from '@angular/http';\n\n@NgModule({\n  declarations: [\n    SamplesComponent,\n    SamplesListComponent\n  ],\n  imports: [\n    CommonModule,\n    HttpModule,\n    SamplesRoutingModule\n  ],\n  exports: [\n    SamplesListComponent\n  ],\n  providers: [\n    SamplesService\n  ]\n})\nexport class SamplesModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { Sample } from './models/sample';\nimport { map } from 'rxjs/operators';\nimport { Http, Headers } from '@angular/http';\n\n@Injectable()\nexport class SamplesService {\n\n  private apiDataUrl = 'http://localhost:5006/api/';\n  constructor(private http: Http) { }\n\n  getSamples(id: string): Observable<Sample[]> {\n    return this\n    .http\n    .get(this\n      .apiDataUrl + 'samples/' + id\n      , {headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('authToken')})}).pipe(map((result) =>\n      result.json()\n    ));\n  }\n  getSample(): Observable<Sample> {\n    return this\n    .http\n    .get(this\n      .apiDataUrl + 'sample'\n      , {headers: new Headers({'Authorization': 'Bearer ' + localStorage.getItem('authToken')})}).pipe(map((result) =>\n      result.json()\n    ));\n  }\n}\n\n","<div class=\"container\">\n  <div class=\"row mt-3\">\n    <div class=\"col-lg-12\">\n      <h2>Ooops!</h2>\n      <h3>404 Page Not Found!</h3>\n    </div>\n  </div>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.less']\n})\nexport class PageNotFoundComponent {\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutService {\nnavBarSource$ = new Subject<boolean>();\n\nshowNavBar(): void {\n  this.navBarSource$.next(true);\n}\n\nhideNavBar(): void {\n  this.navBarSource$.next(false);\n}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [\n    PageNotFoundComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    PageNotFoundComponent\n  ]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}