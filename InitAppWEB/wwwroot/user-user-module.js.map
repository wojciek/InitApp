{"version":3,"sources":["webpack:///./src/app/guards/form-can-deactivate.guard.ts","webpack:///./src/app/user/user-change-password/user-change-password.component.html","webpack:///./src/app/user/user-change-password/user-change-password.component.less","webpack:///./src/app/user/user-change-password/user-change-password.component.ts","webpack:///./src/app/user/user-dashboard/user-dashboard.component.html","webpack:///./src/app/user/user-dashboard/user-dashboard.component.less","webpack:///./src/app/user/user-dashboard/user-dashboard.component.ts","webpack:///./src/app/user/user-edit/user-edit.component.html","webpack:///./src/app/user/user-edit/user-edit.component.less","webpack:///./src/app/user/user-edit/user-edit.component.ts","webpack:///./src/app/user/user-resolve.service.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.less","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.service.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface CanComponentDeactivate {\r\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FormCanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\r\n  canDeactivate(component: CanComponentDeactivate): Observable<boolean> | Promise<boolean> | boolean {\r\n      return component.canDeactivate ? component.canDeactivate() : true;\r\n\r\n  }\r\n}\r\n","module.exports = \"<form [formGroup]=\\\"changeUserPasswordForm\\\">\\n<!-- Button trigger modal -->\\n<button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#exampleModal\\\">\\n  Change password\\n</button>\\n\\n<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"exampleModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Change your password</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"dateOfBirth\\\">Set new password</label>\\n              <div class=\\\"input-group\\\">\\n                <input formControlName =\\\"Password\\\" type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"password\\\">\\n              </div>\\n            </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Close</button>\\n        <button type=\\\"submit\\\" [disabled]=\\\"changeUserPasswordForm.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"changeUserPassword()\\\">Save changes</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1jaGFuZ2UtcGFzc3dvcmQvdXNlci1jaGFuZ2UtcGFzc3dvcmQuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { HttpHandler, HttpEvent } from '@angular/common/http';\n\n@Component({\n  selector: 'app-user-change-password',\n  templateUrl: './user-change-password.component.html',\n  styleUrls: ['./user-change-password.component.less']\n})\nexport class UserChangePasswordComponent implements OnInit {\n  changeUserPasswordForm: FormGroup;\n\n  testBool: boolean;\n  constructor(private router: Router, private formBuilder: FormBuilder, private userService: UserService) { }\n\n  ngOnInit() {\n    this.changeUserPasswordForm = this.buildUserPasswordForm();\n  }\n\n  buildUserPasswordForm(): FormGroup {\n    return this.formBuilder.group({\n      Password: ['', Validators.required]\n    });\n  }\n  changeUserPassword() {\n    this.userService.changeUserPassword(this.changeUserPasswordForm.value).subscribe((successResponse) =>\n    console.log('udało się'+ successResponse),\n    (errorResponse)=> console.log('dupa nie udało sie'),  \n    ()=> console.log('to sie zawsze zrobi na koniec')\n    )\n\n  }\n}\n","module.exports = \"<h3>User Dashboard</h3>\\r\\n<hr>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label for=\\\"username\\\" class=\\\"col-sm-2 col-form-label\\\">Username</label>\\r\\n  <div class=\\\"col-sm-10\\\">\\r\\n    <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"username\\\" [value]=\\\"appUsername\\\">\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\">\\r\\n  <label for=\\\"password\\\" class=\\\"col-sm-2 col-form-label\\\">Password</label>\\r\\n    <app-user-change-password></app-user-change-password>\\r\\n</div>\\r\\n  <hr>\\r\\n  <div class=\\\"form-group mt-2\\\">\\r\\n    <label>Address</label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"staticEmail\\\" [value]=\\\"appUserData.Line1 + appUserData.Line2 + appUserData.Line3\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group mt-2\\\">\\r\\n    <label>City</label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"staticEmail\\\" [value]=\\\"appUserData.City\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group mt-2\\\">\\r\\n    <label>Zip Code</label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"staticEmail\\\" [value]=\\\"appUserData.ZipCode\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"form-group mt-2\\\">\\r\\n    <label>Country</label>\\r\\n    <div class=\\\"col-sm-10\\\">\\r\\n      <input type=\\\"text\\\" readonly class=\\\"form-control-plaintext\\\" id=\\\"staticEmail\\\" [value]=\\\"appUserData.Country\\\">\\r\\n    </div>\\r\\n  </div>\\r\\n  <button (click)=\\\"changeUserAddress()\\\" class=\\\"btn btn-dark\\\">Change Address</button>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1kYXNoYm9hcmQvdXNlci1kYXNoYm9hcmQuY29tcG9uZW50Lmxlc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../user.service';\r\nimport { AppUserAddressDTO } from '../models/appUserAddressDTO';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.less']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  appUserData: Observable<AppUserAddressDTO>;\r\n  appUsername: Observable<string>\r\n  constructor(private router: Router, private userService: UserService, private route: ActivatedRoute, private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n    this.appUserData = this.route.snapshot.data['user'];\r\n    \r\n    if(this.authService.loggedInUserName$){\r\n      this.appUsername = this.authService.takeLoggedInUserName();\r\n    }\r\n  }\r\nchangeUserAddress() {\r\n  this.router.navigate(['edit']);\r\n}\r\n}\r\n","module.exports = \"<h3>User Edit Address</h3>\\n<h5>UserData</h5> \\n<hr>\\n<app-user-change-password></app-user-change-password>\\n<hr>\\n  <form [formGroup]=\\\"updateUserAddressForm\\\">\\n    <div class=\\\"form-group mt-2\\\">\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>Address Line 1</label>\\n        <input formControlName =\\\"line1\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"line1\\\" placeholder=\\\"line1\\\">\\n      </div>\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>Address Line 2</label>\\n        <input formControlName =\\\"line2\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"line2\\\" placeholder=\\\"line2\\\">\\n      </div>\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>Address Line 3</label>\\n        <input formControlName =\\\"line3\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"line3\\\" placeholder=\\\"line3\\\">\\n      </div>\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>City</label>\\n        <input formControlName =\\\"city\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"city\\\" placeholder=\\\"city\\\">\\n      </div>\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>Zip Code</label>\\n        <input formControlName =\\\"zipCode\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zipCode\\\" placeholder=\\\"zipCode\\\">\\n      </div>\\n      <div class=\\\"form-group mt-2\\\">\\n        <label>Country</label>\\n        <input formControlName =\\\"country\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"country\\\" placeholder=\\\"country\\\">\\n      </div>\\n    <button [disabled]=\\\"updateUserAddressForm.invalid\\\" type=\\\"submit\\\" (click)=\\\"updateUserAddress()\\\" class=\\\"btn btn-dark\\\">Save Changes</button>\\n    </div>\\n  </form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1lZGl0L3VzZXItZWRpdC5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CanComponentDeactivate } from '../../guards/form-can-deactivate.guard';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { UserService } from '../user.service';\nimport { AppUser } from 'src/app/identity/models/appuser';\nimport { AppUserAddressDTO } from '../models/appUserAddressDTO';\nimport { UserResolveService } from '../user-resolve.service';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.less']\n})\nexport class UserEditComponent implements OnInit, CanComponentDeactivate {\n  appUser: AppUserAddressDTO;\n  updateUserAddressForm: FormGroup;\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private userService: UserService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.updateUserAddressForm = this.buildUserEditForm();\n    this.appUser = this.route.snapshot.data['user'];\n  }\n\n\n  canDeactivate() {\n    if (!this.updateUserAddressForm.dirty) {\n      return true;\n    }\n    return window.confirm('Discard changes?');\n  }\n\n  buildUserEditForm(): FormGroup {\n    return this.formBuilder.group({\n      line1: [this.appUser.Line1],\n      line2: [this.appUser.Line2],\n      line3: [this.appUser.Line3],\n      city: [this.appUser.City],\n      zipCode: [this.appUser.ZipCode],\n      country: [this.appUser.Country],\n    });\n  }\n\n  updateUserAddress() {\n    this.userService.updateUserAddress(this.updateUserAddressForm.value).subscribe(() =>\n    this.router.navigate(['user']));\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { AppUserAddressDTO } from './models/appUserAddressDTO';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserResolveService implements Resolve<AppUserAddressDTO>  {\n\n  constructor(private userService: UserService) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.userService.getUserAddress();\n  }\n}\n","import { Route, RouterModule } from '@angular/router';\r\nimport { UserComponent } from './user.component';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { AuthGuard } from '../guards/auth.guard';\r\nimport { FormCanDeactivateGuard } from '../guards/form-can-deactivate.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserResolveService } from './user-resolve.service';\r\n\r\nconst userRoutes: Route[] = [\r\n    {\r\n        path: '',\r\n        component: UserComponent,\r\n        children: [\r\n            {\r\n              path: '',\r\n              component: UserDashboardComponent,\r\n              canActivate: [AuthGuard],\r\n              resolve: { user: UserResolveService}\r\n            },\r\n            {\r\n              path: 'edit',\r\n              component: UserEditComponent,\r\n              canActivate: [AuthGuard],\r\n              canDeactivate: [FormCanDeactivateGuard],\r\n              resolve: { user: UserResolveService}\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(userRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class UserRoutingModule {\r\n}\r\n\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQubGVzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.less']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserComponent } from './user.component';\r\nimport { UserEditComponent } from './user-edit/user-edit.component';\r\nimport { UserChangePasswordComponent } from './user-change-password/user-change-password.component';\r\nimport { UserService } from './user.service';\r\nimport { UserResolveService } from './user-resolve.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthInterceptor } from '../auth/auth.interceptor.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserComponent,\r\n    UserDashboardComponent,\r\n    UserEditComponent,\r\n    UserChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    UserRoutingModule\r\n  ],\r\n  exports: [\r\n    UserDashboardComponent,\r\n    UserEditComponent,\r\n    UserComponent\r\n  ],\r\n  providers: [\r\n    UserService,\r\n    UserResolveService\r\n  ]\r\n})\r\nexport class UserModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Http, Headers } from '@angular/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { UpdateAppUserAddressCommand } from './models/updateAppUserAddressCommand';\r\nimport { ChangeAppUserPasswordCommand } from './models/changeAppUserPasswordCommand';\r\nimport { AppUserAddressDTO } from './models/appUserAddressDTO';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private apiDataUrl = 'http://localhost:5006/api/';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  updateUserAddress(data: UpdateAppUserAddressCommand) {\r\n    return this.http.put(this.apiDataUrl + localStorage.getItem('authUser'), data);\r\n  }\r\n\r\n  changeUserPassword(password: ChangeAppUserPasswordCommand) {\r\n    return this.http.put<ChangeAppUserPasswordCommand>(this.apiDataUrl + 'password/' + localStorage.getItem('authUser'), password)\r\n  }\r\n\r\n  getUserAddress(): Observable<AppUserAddressDTO> {\r\n    return this.http.get<AppUserAddressDTO>(this.apiDataUrl + 'address/' + localStorage.getItem('authUser'));\r\n  }\r\n}\r\n"],"sourceRoot":""}